volumes:
  pg_data_production:
  static_volume:

services:
  db:
    image: postgres:13.10
    env_file: .env
    volumes:
      - pg_data_production:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    image: kluschik/taski_backend
    env_file: .env
    volumes:
      - static_volume:/app/staticfiles
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn backend.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    image: kluschik/taski_frontend
    env_file: .env
    command: >
      sh -c "cp -r /app/build/. /staticfiles/ &&
             echo 'Frontend static files copied to /staticfiles/' &&
             ls -la /staticfiles/"
    volumes:
      - static_volume:/staticfiles
    depends_on:
      - backend

  gateway:
    image: kluschik/taski_gateway
    env_file: .env
    volumes:
      - static_volume:/staticfiles
    ports:
      - 8000:80
    depends_on:
      - backend
      - frontend